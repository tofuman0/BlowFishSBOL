#pragma once
#define WIN32_LEAN_AND_MEAN 

#define BF_N			16

namespace SBOL {
	class BlowFish {
	public:
		BlowFish(char* _SDATKey = nullptr /* Set nullptr to use default */, char* _PDATKey = nullptr /* Set nullptr to use default */);
		~BlowFish();
		enum returncodes {
			BF_DECRYPT_FAIL = -3,
			BF_ENCRYPT_FAIL = -2,
			BF_CHECKSUM_FAIL = -1,
			BF_OK = 0
		};
	private:
		/*
		*	Define own keys ORIG_P, ORIG_S, PDATKey and SDATKey and
		*	then #define BLOWFISH_KEYS else default keys are used.
		*/
#ifndef BLOWFISH_KEYS
		unsigned long ORIG_P[16 + 2] = {
			0xB4D1FA18, 0x17359845, 0x858B1ABE, 0x95E0E5D4,
			0x349BA8B2, 0xBB31A340, 0x98BE6A08, 0x7CDEFC1B,
			0xD7B8B376, 0xA84085E9, 0x2EC4F641, 0xA47B9CFC,
			0x503CBB29, 0x5BECC04F, 0xD1144727, 0x27D99B89,
			0x0286474B, 0x1BEB6D8D
		};
		unsigned long ORIG_S[4][256] = {
		{
				0x43A39D36, 0x0871273C, 0xA16FE24D, 0x408A7129,
				0x2873217F, 0xFAB6EE06, 0x2AEC00D7, 0x63BC110B,
				0xB4330BD9, 0x2503FC69, 0x98936272, 0x171E6C86,
				0xF5FBB048, 0xE3C9DEFB, 0x34C86E35, 0x6405AFEE,
				0x9F07E401, 0xE21E26C8, 0xE31D5FC8, 0x1287DA7E,
				0xEDC4348F, 0x52CACB27, 0x0CA047AB, 0xBA62F085,
				0x574320B5, 0xB8F01760, 0x5AD3EB88, 0x284DA861,
				0x1EEB4C20, 0xF0AA889E, 0xFC0E9E1D, 0x208E1AAE,
				0x4987E953, 0x2FA3DDB9, 0xE821A14A, 0xC7F0CCF0,
				0x76C7B765, 0x3AC73D04, 0xC9D808F2, 0xF57884D0,
				0xC75AABFA, 0xBA3D8026, 0x245CCCA4, 0x83D3785E,
				0x33C41621, 0xECE27B05, 0x257E8483, 0xF5E12CBA,
				0xBD3B57CF, 0xE488A366, 0x5ECCAE86, 0x0D19058E,
				0x21462AA5, 0xFCB441CC, 0xEAA2C513, 0xB80716E9,
				0xAD01D808, 0xFDDD2B21, 0x5451788D, 0xF6B8B305,
				0xF3489B5C, 0x6DB33B03, 0xD8EC3CF0, 0xCF7C10A2,
				0x6114CFCF, 0x7B17E723, 0x4CB6B592, 0x7DF78D18,
				0xB51BAE13, 0x45063C57, 0x81FFE165, 0x1564D2AB,
				0xBE9DD412, 0x3414B094, 0xFB5860DA, 0x0EB10DCE,
				0xB356F8D2, 0x667BFC0A, 0xF99C0CF3, 0x3D451860,
				0xFAC33042, 0x48C4A1F8, 0x068139B8, 0x3DC3A535,
				0xFE619DFC, 0x85EAAD74, 0x2AAD60C0, 0xEE6DBA08,
				0x3363F78F, 0xAB2193E6, 0xF65ACBAE, 0x12D59E18,
				0x1C7E168B, 0xD7E13124, 0xEF143755, 0xAD1DCE2E,
				0x70E1E748, 0x1753B0E5, 0xD08AD431, 0xC653FA36,
				0xDE453AF2, 0xA6D1E996, 0x8D6E71E2, 0xD20D92AF,
				0xA94049B4, 0x409A82D8, 0x4D817A45, 0xDB63500D,
				0x99C5E25B, 0x100B8DED, 0xB744EB48, 0x66784E69,
				0x756EC08A, 0x26EBDCAD, 0x09FC702F, 0x9450962A,
				0x533BC126, 0xD031F054, 0xCECC0E52, 0x8BFAB4F5,
				0xF86DE121, 0xAEFCC527, 0x85AB227D, 0xADC27CE1,
				0xFF6CC3B1, 0x0DA007BC, 0x5C13D7D4, 0x21CE2F9B,
				0x2E754094, 0x4EA5DA6F, 0xF681B899, 0x8BBEDD25,
				0x505D38C9, 0xD758E481, 0x429DF1AB, 0x2B456D4D,
				0xC7EB502F, 0x8AF0A29A, 0x46339056, 0xD0BCE2EB,
				0xF931B76E, 0x6DB1355C, 0x1E377B68, 0x4DA2B268,
				0xACE78671, 0x6FF3FD87, 0xA1C08E58, 0x3F97C23D,
				0xA2AF276A, 0x6FB519F0, 0xC5A3EDD8, 0xAE907112,
				0x0ECCC92D, 0x5AE11C30, 0x8A19C6BE, 0x7189FB4D,
				0x47D23866, 0xB8EE9155, 0x3CF9A256, 0x1CC1C7E5,
				0xFBCDB920, 0x2D5AC858, 0x739135CF, 0x28608330,
				0x806AAF08, 0x6FB31528, 0xDA6C27FC, 0xBF4345CD,
				0x0AC574EB, 0x2668D7F7, 0x421EDB2C, 0xDD6D0900,
				0x734F624A, 0x345DEEA5, 0xF26D85D3, 0x5E745678,
				0x61B05A4A, 0xA6E9DC93, 0x40EE0E6E, 0xBD63B124,
				0x074D4ADF, 0x3E000308, 0x7A3F1EE3, 0xFD054730,
				0x401E4340, 0x2159B770, 0x1EACCDA1, 0x1EE70429,
				0x0166726D, 0x6282BDF4, 0x18182882, 0x009F608C,
				0xC13FCE30, 0xF801558C, 0x43416303, 0x2538533F,
				0xA1A1B288, 0x2E9E89E9, 0x7AE7BF6E, 0x1D92B133,
				0x77305C81, 0x27E1E478, 0x883C6546, 0x5E1B720B,
				0x2438C170, 0x6F857029, 0xEC54AD13, 0x423F384B,
				0x86F132F6, 0x1007E997, 0x055CE584, 0xB38A84E9,
				0x763FB0F7, 0xE9276A16, 0x59C4D267, 0x6D0FA741,
				0x7D5F219C, 0xEDAE1B30, 0x46D38D45, 0x3E8EEEDB,
				0x90B79EBF, 0xB0E325CE, 0xB2F8902D, 0xC9287021,
				0xB4F4A60D, 0x609B2B8E, 0xC7F5038F, 0xCB71363A,
				0xE853D51B, 0x4BCAC511, 0xB0EFCD32, 0x92772B57,
				0x15B695E6, 0xF207413B, 0x83588BF8, 0xDEE5DAD3,
				0x25D9BF5A, 0xED843BDA, 0x8DC390C2, 0x0AC5BB87,
				0x4681C9D1, 0x2C0D5674, 0xBDF034E6, 0x1376E490,
				0x982AE127, 0xC98D7BB1, 0x62067CFD, 0xBA9F4B87,
				0x26F5F7B3, 0x792B6B26, 0x91A497BE, 0x5717C6F4,
				0xC520BFCF, 0x3B310133, 0x982AD90B, 0xFE1799FA
			},
		{
			0xDDEAE07B, 0x2725BBD4, 0x4DE79BBE, 0x548BB6B5,
			0x3FFE3620, 0xDB3971EF, 0x0C7EF028, 0x017F22F6,
			0x7C3A1CE3, 0xFB0A8991, 0xC6F4C2FC, 0x52230E73,
			0x8BA69237, 0xE79BDCBB, 0x30CB85D0, 0x7488AAAE,
			0xD1C4080A, 0xCDD20FF7, 0xFD017446, 0x0B69D146,
			0x33420C99, 0x6178A067, 0xDFBFA876, 0x60B7CF53,
			0xDC4FB016, 0x14E07DB6, 0xF5127B56, 0x928E5CCE,
			0x9BF8FDD1, 0xAE2A615B, 0xAC098884, 0xFDFAE033,
			0xF811A714, 0xC2307216, 0x290CC597, 0x3AC099A9,
			0xAE99148C, 0x114E3ECC, 0x1EEFD47C, 0xC9866228,
			0x20AA4AA9, 0x60C09C9F, 0x608CB194, 0x92902591,
			0x3E9C678A, 0xAC27E422, 0xB715EAC8, 0x4C9BB32F,
			0x4303856B, 0xEC3BA166, 0x04A2D9E5, 0xB267D993,
			0xAA777713, 0xA9524A4C, 0x5827E6A4, 0x0A654F39,
			0x3BD4F3D6, 0x8140959E, 0x7C5859AE, 0x34E78ED3,
			0x72A85F0B, 0xAD7A9EA1, 0xA2102D33, 0x88AE25A3,
			0xDEC41DA8, 0xC1FF2B98, 0xE1D29F95, 0x669A9451,
			0xBC288200, 0xB409ECEB, 0xC6EB20E2, 0x2C211B21,
			0x4E0AE9B1, 0x4B059880, 0x251D3E82, 0x4C41D1BE,
			0xC782E2B1, 0xBEFDE3B4, 0xC08A4F76, 0x31145F19,
			0xEAC8D988, 0xE4984A89, 0x2C310A2C, 0x7BDDEF1C,
			0x7CEA7CAA, 0x4D178F6A, 0xF59BD5F6, 0x54F45542,
			0x618C88D9, 0xA2874B98, 0x4FD5ADA9, 0xB4522A86,
			0x8233DFD5, 0xBAF754C3, 0xC0049092, 0x85AA744F,
			0xE371680E, 0x80A3DEC7, 0x133CE946, 0xF1838B0D,
			0x94A7C663, 0x493559FD, 0xAC8388AD, 0xCBB4379B,
			0x6201767F, 0x09636D6A, 0x0E2A51BC, 0x8E87ACFE,
			0x1675D7E0, 0x7A7BE123, 0x169ECE9A, 0xCAAEBA25,
			0xE9B1798C, 0xDEAF966A, 0xBBF74C2B, 0x0B798F81,
			0x10AE1B46, 0xC2F658B7, 0xBEDC5BE8, 0x0C8025FA,
			0x56879E2A, 0x04727AE8, 0x376CACC5, 0x8E9ABF64,
			0x6269DE39, 0xA68FBDAF, 0x8BABB681, 0x8B52EBF0,
			0xC2B53998, 0x69858226, 0x7D3F6EFE, 0x7A55B1F6,
			0x752CD707, 0x36ED5815, 0x2311A943, 0x931C91B8,
			0x55A24F61, 0x2EFCCA37, 0xF7C8B317, 0xF83D0892,
			0x7E5E3781, 0x4DA107AD, 0xBA61EF3F, 0xCDFEA114,
			0x87B326B8, 0xBB99F3E0, 0x7C4FD9E7, 0xF3318780,
			0x855C38A0, 0x7DF32F06, 0x95A46E8E, 0x3A95F541,
			0x27E5CC00, 0xDCE032AB, 0x470E0E9D, 0x5D3A4E84,
			0x7E5C162C, 0xF0F2BC39, 0x0C3DCC3D, 0x226514FE,
			0xF41D8E21, 0x8B2F605A, 0x30B5FB2B, 0xF7CA2DC0,
			0xD0F8CAA2, 0xACBA2425, 0xA30E7B47, 0x50B32869,
			0x0DC49D8B, 0x19F1300B, 0x07690BEE, 0xF2AFEF38,
			0x68A9180A, 0x0975BFE9, 0x837F05F1, 0x86F88213,
			0x9EA718BB, 0x5976B146, 0x064E7133, 0xE8C82A0B,
			0xC9671437, 0x8DB2E2F5, 0x0D155591, 0x8A52D606,
			0x5F259A7D, 0xC5BEA0C4, 0x014BD874, 0xFF2CA3B8,
			0xC87D6261, 0xA456917A, 0x6EB87FF3, 0x7EECACE5,
			0xCFDA844B, 0x78F42975, 0xD280CF84, 0xB0AE8570,
			0xD77E7226, 0x353A3D7A, 0x4DFCC187, 0x6A5DC140,
			0x59D264D2, 0x61FA2D27, 0xF7C1AD8F, 0xD35FB397,
			0x488EEB0E, 0x1617DF59, 0x74DDD9FA, 0xAF13F2C0,
			0x41F23362, 0xCD1FB6D6, 0x6C181530, 0x53592635,
			0x1187B455, 0xFB5DE402, 0xD9141A9D, 0xC6022217,
			0x9BCD5190, 0x3F8BD80F, 0x84F223E4, 0xB5129E90,
			0xC8D21FBA, 0x9CC7677A, 0x8F3F64AE, 0xB5D1E0F3,
			0xA5E26002, 0x1F05EED3, 0x46F17C63, 0xFCB2AD4D,
			0xEC4EA9CB, 0x5D7EE4F0, 0xD0176239, 0x5EE9A2FE,
			0x36991014, 0x8B68C00E, 0x786148C7, 0xF34B09A7,
			0x3BFB393A, 0x579C9652, 0xCA943D6C, 0x109D5A4C,
			0x0ED4EABE, 0x55D7A414, 0x6F47F997, 0x9E8E0E5B,
			0x4DE54D45, 0x80C7185F, 0xF9F14AEB, 0x75F9D5D0,
			0x5754A4F7, 0xE3AEA848, 0xAFB8680E, 0x63FF91B0,
			0x87AEB379, 0x0120AFDA, 0x767531BD, 0x4D153F69
		},
		{
			0x7BAFCAF8, 0x0413D069, 0x66DCB68C, 0x04FBBBA4,
			0xD387B069, 0xE6924469, 0x2C64FDBE, 0x443290F8,
			0x4498B4E3, 0xA5B064FA, 0xD5294429, 0xC090F321,
			0x8EAB66BE, 0x09B4D7D6, 0x84B3C1E4, 0x511D18D0,
			0xDF076C8F, 0x06270321, 0xE0644F45, 0xF630A1D7,
			0x512C9B7C, 0x952F0917, 0x113CFF40, 0xA35D1794,
			0x067DB925, 0xC76FABD3, 0x4AB7D976, 0x3D5A9A0A,
			0xB8C0E8B7, 0xC594BB64, 0x9ABC164A, 0x7B26FF6D,
			0xF84C84F2, 0x49D8FB90, 0xF89E5034, 0xB9331F7E,
			0xC1D16E32, 0x78193F1C, 0x271C7096, 0xEA644626,
			0x3A5E8EEC, 0x45A9F17C, 0x5EE8350B, 0xD0FDBAD2,
			0xB06E0EA7, 0x4B65172B, 0x7EAB493D, 0xAD82DE1D,
			0x8F5B6A69, 0xDDFF88C6, 0xB635F6A3, 0x7A750922,
			0xAAFE6AE4, 0x4FCDD5A2, 0xF8D37969, 0x5AE8B06D,
			0x6D9A67DE, 0x486E2509, 0xD7D0C63C, 0x2AD807B9,
			0xC7C5AAAA, 0xB0151F19, 0x6EFD3B29, 0x400607DD,
			0xC738F92C, 0x33870AC8, 0x5C3BBBF5, 0x0B734DA5,
			0x36BADAC6, 0xD1A3B76B, 0xCE64EE8C, 0x00BBA3EC,
			0x6F687892, 0x94B9A1E0, 0x102D87CC, 0x97B8BC75,
			0x075387D8, 0x7456FFB2, 0xD85385D1, 0x5981164C,
			0x996B5B7E, 0xD394B181, 0xD0D9EB34, 0xCF18FE89,
			0xA2F1C37D, 0x470D5043, 0x622C5301, 0xD383A7F4,
			0xB7EDE8A4, 0xF0BA0CF0, 0x71687835, 0xB1F5FC8D,
			0x9E822452, 0x9273A20E, 0x21F6C143, 0x5A431387,
			0xFDB50770, 0xA5AE0273, 0xADB49DF2, 0x7E2E2BB2,
			0x1722329E, 0x762A9F0B, 0x4EE29C1C, 0xBF3269B8,
			0x4082E8D7, 0x0729046F, 0xF4EF98F2, 0x795C6760,
			0xC4DB35E1, 0x19EFD86A, 0x550F6FB9, 0x65AE1F8E,
			0x9AD9F5D3, 0x0BBE91E4, 0xAAE1FE3D, 0x64686FA9,
			0x38824CF0, 0x337D4F68, 0x0B8D73DC, 0x4DFEFD9F,
			0x56EDC780, 0xFFF9BCA9, 0xB9F744AD, 0x4C407894,
			0x63BB9F59, 0x5C909135, 0x27AB8102, 0xFB817F9D,
			0xF6ED316D, 0x5E4DEF0C, 0x3003419D, 0x4B87CE35,
			0x2D85A118, 0xC3CD3FB4, 0xED04EB51, 0xE6AD467D,
			0xA9ABBE25, 0x5C83CBEB, 0x10B67209, 0x64BEA3BF,
			0xF8D23F39, 0x56FABDAD, 0x82E7DC5C, 0xE8BE638C,
			0xFA82D2A9, 0x2902C379, 0x96332D76, 0xDD6DF5C0,
			0x8AFD8088, 0x835A7F6A, 0xAFB72F48, 0x7273555B,
			0xD4D286CB, 0x9A828516, 0x4B9C7CFE, 0x473D7ABA,
			0xF421F9DE, 0x4A1638F1, 0x2E517B18, 0xF474556E,
			0x0F2C10C9, 0x60695016, 0xF0E8ED68, 0xF095F0DF,
			0x436F15D6, 0x66A8B120, 0xE9D73E94, 0x49A66C5C,
			0x15D2FDA5, 0x608E3DE3, 0x2010D319, 0xAC90CEF1,
			0xE930C92E, 0x2F783EB4, 0xC7D6D20B, 0x51C8BEF3,
			0xDEC86401, 0x624F6F32, 0x64E461A8, 0x191B2F52,
			0xC5F66B55, 0x58251EE4, 0x24E762C7, 0xD66C4B2B,
			0xEA7DB6F3, 0x1D8F7114, 0x14FA9EEB, 0x03F10772,
			0xD6FECB1E, 0xB024C9E0, 0x1C47C703, 0x5B924EDC,
			0x2B9D3C73, 0x2D129740, 0x8338F2D8, 0xE7E43B0E,
			0x29118B26, 0x703B4C9B, 0xF6BF9B33, 0x54A2D6A5,
			0x78CAB192, 0x9B602E1C, 0xDA0B30B7, 0x8FFE6E80,
			0x8A2BAF8F, 0x9D373471, 0x33166281, 0xB8F863FB,
			0x4C294A15, 0xC9AB966E, 0x33725E0D, 0xC15F11C2,
			0xC083CE93, 0x3996156A, 0x30922754, 0x9F7640B9,
			0x0A681CB9, 0xE9D116D3, 0x55F0DC96, 0xF3389627,
			0x6089EAB8, 0x50671670, 0x90F0C83A, 0xA04CEFF2,
			0x83760E49, 0xB5A87AF5, 0xC5524F04, 0x525286A4,
			0x2D5D7EC6, 0x002C264E, 0x7D6CEF33, 0x5ECB8FE6,
			0xE197749B, 0xDDEC9318, 0xABE29AAF, 0xEC02ECB4,
			0x1675E2F1, 0xE2DF0F2B, 0x8A53CD24, 0x450E286C,
			0x7FC4C7E8, 0x986C3727, 0x48AFEC45, 0xDF3F8154,
			0x8EC061CE, 0x23F37668, 0x3217844B, 0xFCC385AC,
			0xE1475979, 0xC673DE54, 0xA6BA515E, 0x4F5658A9,
			0x490AA2A4, 0x02F51282, 0xF99E6A1E, 0xD0F09070
		},
		{
			0xAAAB5EA9, 0x456A6741, 0x3D52E9A9, 0xCA57BF8D,
			0xCC20F90E, 0xC135A9D2, 0x4512B9D0, 0x0B2C0D2E,
			0x47831E0F, 0x5181E587, 0x46BF8CEE, 0x599054ED,
			0x291C8DFD, 0xB33300D7, 0x22FE232E, 0xFAA6FE24,
			0xC9D83DA1, 0x2C04FEEB, 0x5635E642, 0xF7DB5258,
			0xC581687E, 0xD61F4EEF, 0x47E59A8F, 0xDC40DF56,
			0xBBAB2D4D, 0x3B2AD6C0, 0x3C07B678, 0x2ECE7594,
			0x336A4760, 0xFABFC30A, 0xF5611C72, 0x0A167EB2,
			0x501B5228, 0xD5B4BE66, 0x378E953A, 0x0C624034,
			0x1550F32A, 0x0D7BFADF, 0x017787C0, 0x2AF4CD46,
			0xB8B6326B, 0x39AAAA73, 0xDD3B0716, 0x61C7F27B,
			0x59A16145, 0x69C2694A, 0xD194E1FB, 0xE96A9ACB,
			0x10743B87, 0x19201693, 0x0D9B763F, 0xADAE7705,
			0x7B006FCA, 0x0EA44909, 0xBC60294B, 0x92BD1DC3,
			0x06473CAA, 0x93EF36EF, 0x4341AE46, 0xECEFBFB8,
			0xB131B741, 0x3F62280D, 0xCA4624E2, 0xCA1867DC,
			0x70BB3CE3, 0x708B3776, 0xD9203C6F, 0x7F056A0D,
			0x7845541F, 0xB8ADC95C, 0x6847F6BB, 0xEB85BEB8,
			0xE8F19303, 0x7FE7F0C7, 0x69069ED4, 0x7545CE1C,
			0x8797FF44, 0x1864FF2A, 0x9533F3B7, 0x97F4602F,
			0x557D0E87, 0xAC00C932, 0x09B98A7C, 0x3BAA99BA,
			0x8DD1FF0D, 0x8EF5B367, 0x670CF66D, 0xB64C658B,
			0xE7A54BB8, 0x23C76F67, 0x95C6A412, 0x1A2AAC2D,
			0xB8C3E983, 0x529A4B68, 0x3D5CC3F9, 0x5C3F02F1,
			0xDF7889C3, 0xA8A04C1E, 0xA90FC8F2, 0x05B06B03,
			0x7AEA0052, 0x6DAEED5E, 0xC3B35EF4, 0xE9C12EA2,
			0x382675EE, 0x55BBAFD6, 0xD84EC5FB, 0xF4857610,
			0x323E9880, 0x4FFF22B4, 0xFB17BF6F, 0x9B99B3F6,
			0x250AD69A, 0xF4D7504F, 0xC8FC4E41, 0x8CB0583E,
			0xCD2E694F, 0x8DC81FD0, 0x5C429311, 0xFD24752D,
			0x4F32FAEE, 0xAACB91D7, 0xAEA79AD4, 0x2C245F47,
			0xE27A5E38, 0x6AF4142D, 0x1FF6823E, 0x51ACE1D9,
			0x420D74F5, 0xC4A1CF0E, 0x3E52E98D, 0x66DEF5E0,
			0xE49E9F1F, 0x79CD85C9, 0x68E286E3, 0x21C5EFCF,
			0xD0D05D98, 0xDE24725C, 0xA442D6FA, 0x93872114,
			0x732094B8, 0x0708AA8F, 0x96283124, 0x5EFE30D8,
			0xE1D1AD12, 0xA7B03D12, 0x938A8FDD, 0xB9E2B968,
			0xF387F023, 0x7905D14C, 0x2DAAEBBD, 0xA4D7B72F,
			0x3018AB73, 0xC35EEBDD, 0xA1A25B29, 0x30B12A5B,
			0x708C58EE, 0x2C594366, 0x41938355, 0x33783A59,
			0x8A0019DB, 0x44C12F0A, 0x404A4E5D, 0x479A4AA8,
			0x95AB55BA, 0x5603A6F9, 0x1F6BA3EC, 0x7023BDC1,
			0x690ECB29, 0xD5672DAA, 0x62478B91, 0xB94BD70C,
			0x5109B2BC, 0x87766CBA, 0x81036CE3, 0x0D0487B7,
			0x6A7705F3, 0x5E260C7D, 0x5238F4CB, 0x822A3843,
			0x265399CE, 0x7597FA9C, 0x8042C0F7, 0x5D9534D2,
			0x707CFE9E, 0x86084DAD, 0xDC08302E, 0xA2E87BF4,
			0x31B107A2, 0x70450271, 0x4530A4BD, 0x1BE3628E,
			0x8D9AE4D3, 0xDD35A41C, 0x572EE3B0, 0x55E6A248,
			0x71A7311F, 0x0D0BA1BE, 0x769DE1D9, 0x8175638F,
			0x77DC4AC4, 0x8E4A4803, 0x5EF2EB41, 0x5FAEEEE1,
			0x868823F6, 0x6FBC8F97, 0x14014257, 0x666DB20B,
			0x67B565C9, 0x36A2E6B5, 0x0538A7A3, 0xC65C5F92,
			0x3C6013F2, 0xCAE77D27, 0xFE86A609, 0x1842E55C,
			0x4E06F202, 0x132BDB40, 0xDCC0008D, 0xE356C684,
			0x7656592F, 0xA2EA849A, 0xD7734096, 0x5562ED0A,
			0x5B3AC56F, 0xF2388190, 0x2DB75172, 0xA72F4266,
			0xE382FB97, 0x229492B2, 0x265D41EC, 0x5FE60CBD,
			0xC583AE50, 0x86D07545, 0xA83D2FF0, 0xB7D93F60,
			0x2AA8B00C, 0x69D65EE6, 0xE9213357, 0xB0E7F0F0,
			0x175D6EDE, 0x1A781F48, 0xEA3A6B20, 0xDC6B3AEE,
			0x8BD852CC, 0x926D1A1C, 0x9355FA74, 0x467D736B,
			0x004468FB, 0x36CC4E30, 0xD19BB7BF, 0x52987631,
			0x29DEF3A2, 0x5EE972CD, 0xC9017175, 0xAA55E276
		}
		};
		unsigned char PDATkey[64] = {
			0x23, 0x77, 0x11, 0xF0, 0xFF, 0xF8, 0x72, 0x40, 0x86, 0x26, 0x6A, 0xD7, 0x14, 0x6F, 0x7B, 0x57,
			0xCA, 0xC7, 0x37, 0x1B, 0xEE, 0xDB, 0x5E, 0x4D, 0x98, 0x45, 0x9E, 0x92, 0xEE, 0x7F, 0x93, 0x9D,
			0x6B, 0x32, 0x05, 0x88, 0x7B, 0x47, 0xD5, 0x4A, 0xAA, 0xA0, 0x77, 0xCF, 0xB1, 0x9B, 0x3D, 0x3A,
			0x8D, 0xAB, 0x3A, 0xFB, 0x85, 0x83, 0x15, 0x4F, 0x9F, 0xB6, 0xF9, 0x4F, 0x57, 0x45, 0xD7, 0xFB
		};
		unsigned char SDATkey[64] = {
			0xA5, 0x20, 0xBC, 0x87, 0x8F, 0xE3, 0xE1, 0x41, 0xAD, 0x46, 0x28, 0xC7, 0x1F, 0xDD, 0xA3, 0x17,
			0x24, 0x9F, 0x90, 0x9E, 0xA5, 0x3F, 0x8B, 0x44, 0x9C, 0x17, 0x32, 0x87, 0xED, 0xDC, 0x73, 0xD1,
			0xFB, 0x54, 0xB1, 0x45, 0x08, 0x08, 0xAC, 0x45, 0xAD, 0x78, 0xF0, 0x8D, 0x83, 0x7D, 0x8E, 0xE2,
			0xE9, 0x6C, 0xD4, 0x3B, 0x43, 0xBF, 0xFD, 0x4D, 0xAF, 0x95, 0xE4, 0x8C, 0x41, 0x13, 0x7F, 0xF2
		};
#endif
		typedef struct {
			unsigned long P[16 + 2];
			unsigned long S[4][256];
		} BLOWFISH_CTX;
		void prepareSP(BLOWFISH_CTX* ctx);
		unsigned long F(BLOWFISH_CTX *ctx, unsigned long x);
		void Blowfish_Init(BLOWFISH_CTX *ctx, unsigned char *key, int keyLen);
		void Blowfish_Encrypt(BLOWFISH_CTX *ctx, unsigned long *xl, unsigned long *xr);
		void Blowfish_Decrypt(BLOWFISH_CTX *ctx, unsigned long *xl, unsigned long *xr);
		void BFBufferEncrypt(char* input, unsigned long inputsize, unsigned char* key, unsigned long keysize);
		void BFBufferDecrypt(char* input, unsigned long inputsize, unsigned char* key, unsigned long keysize);
		void MakePS(BLOWFISH_CTX* ctx);
		int verifyCheckSum(unsigned long CheckSum, char* buf, unsigned long size);
		unsigned long createCheckSum(char* buf, unsigned long size);
	public:
		int SDATDecrypt(char* buffer, unsigned long size);
		int SDATEncrypt(char* buffer, unsigned long size, char** outBuffer);
		int PDATDecrypt(char* buffer, unsigned long size);
		int PDATEncrypt(char* buffer, unsigned long size, char** outBuffer);
		int HDATDecrypt(char* buffer, unsigned long size);
		int HDATEncrypt(char* buffer, unsigned long size, char** outBuffer);
	};
}